package pl.wurmonline.deedplanner.forms;


import javax.swing.ButtonModel;
import pl.wurmonline.deedplanner.Globals;
import pl.wurmonline.deedplanner.data.MapFragment;
import pl.wurmonline.deedplanner.data.Tile;
import pl.wurmonline.deedplanner.logic.TileSelection;
import pl.wurmonline.deedplanner.logic.symmetry.*;

/**
 *
 * @author jwalk
 */
public class SymmetryEditor extends javax.swing.JPanel {

    private SymmetryDirection d = SymmetryDirection.CENTER;
    
    /**
     * Creates new form SymmetryEditor
     */
    public SymmetryEditor() {
        initComponents();
        TileSelection.addTileListener((MapFragment frag) -> {
            updatePanel(frag);
        });
        updatePanel(null);
    }

    private void updatePanel(MapFragment frag) {
        if (frag==null) {
            borderLockBtn.setEnabled(false);
            clearAllBtn.setEnabled(false);
            eastToggle.setEnabled(false);
            northToggle.setEnabled(false);
            southToggle.setEnabled(false);
            westToggle.setEnabled(false);
            xLockToggle.setEnabled(false);
            yLockToggle.setEnabled(false);
            xTileLockBtn.setEnabled(false);
            yTileLockBtn.setEnabled(false);
            xyTileLockBtn.setEnabled(false);
            neToggle.setEnabled(false);
            seToggle.setEnabled(false);
            nwToggle.setEnabled(false);
            swToggle.setEnabled(false);
            mirrorFloorsToggle.setEnabled(false);
            return;
        }

        Tile singleTile = frag.getSingleTile();
        if (singleTile != null) {
            borderLockBtn.setEnabled(true);
            clearAllBtn.setEnabled(true);
            eastToggle.setEnabled(true);
            northToggle.setEnabled(true);
            southToggle.setEnabled(true);
            westToggle.setEnabled(true);
            xLockToggle.setEnabled(true);
            yLockToggle.setEnabled(true);
            xTileLockBtn.setEnabled(true);
            yTileLockBtn.setEnabled(true);
            xyTileLockBtn.setEnabled(true);
            neToggle.setEnabled(true);
            seToggle.setEnabled(true);
            nwToggle.setEnabled(true);
            swToggle.setEnabled(true);
            mirrorFloorsToggle.setEnabled(true);
            xLockStatus.setText(singleTile.getMap().getSymmetry().getXStatus());
            yLockStatus.setText(singleTile.getMap().getSymmetry().getYStatus());
        }
        
        xLockToggle.setSelected(Globals.xSymLock);
        xLockToggle.setText(Globals.xSymLock ? "On" : "Off");
        yLockToggle.setSelected(Globals.ySymLock);
        yLockToggle.setText(Globals.ySymLock ? "On" : "Off");
        mirrorFloorsToggle.setSelected(Globals.mirrorFloors);
        mirrorFloorsToggle.setText(Globals.mirrorFloors ? "On" : "Off");
        repaint();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        borderButtons = new javax.swing.ButtonGroup();
        symInnerPanel = new javax.swing.JPanel();
        borderLockingPanel = new javax.swing.JPanel();
        borderLockingLabel = new javax.swing.JLabel();
        northToggle = new javax.swing.JToggleButton();
        borderLockBtn = new javax.swing.JButton();
        westToggle = new javax.swing.JToggleButton();
        eastToggle = new javax.swing.JToggleButton();
        neToggle = new javax.swing.JToggleButton();
        nwToggle = new javax.swing.JToggleButton();
        seToggle = new javax.swing.JToggleButton();
        swToggle = new javax.swing.JToggleButton();
        southToggle = new javax.swing.JToggleButton();
        tileLockingPanel = new javax.swing.JPanel();
        TileLockingLabel = new javax.swing.JLabel();
        xTileLockBtn = new javax.swing.JButton();
        yTileLockBtn = new javax.swing.JButton();
        xyTileLockBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        xLockStatus = new javax.swing.JLabel();
        clearAllBtn = new javax.swing.JButton();
        xLockToggle = new javax.swing.JToggleButton();
        yLockStatus = new javax.swing.JLabel();
        yLockToggle = new javax.swing.JToggleButton();
        mirrorFloorsToggle = new javax.swing.JToggleButton();
        mirrorFloorsLabel = new javax.swing.JLabel();

        setFocusable(false);

        symInnerPanel.setFocusable(false);
        symInnerPanel.setMaximumSize(new java.awt.Dimension(245, 380));

        borderLockingPanel.setFocusable(false);

        borderLockingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        borderLockingLabel.setText("Border Locking");
        borderLockingLabel.setFocusable(false);

        borderButtons.add(northToggle);
        northToggle.setText("N");
        northToggle.setEnabled(false);
        northToggle.setFocusable(false);
        northToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                northToggleActionPerformed(evt);
            }
        });

        borderLockBtn.setText("Lock");
        borderLockBtn.setEnabled(false);
        borderLockBtn.setFocusable(false);
        borderLockBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borderLockBtnActionPerformed(evt);
            }
        });

        borderButtons.add(westToggle);
        westToggle.setText("W");
        westToggle.setEnabled(false);
        westToggle.setFocusable(false);
        westToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                westToggleActionPerformed(evt);
            }
        });

        borderButtons.add(eastToggle);
        eastToggle.setText("E");
        eastToggle.setEnabled(false);
        eastToggle.setFocusable(false);
        eastToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eastToggleActionPerformed(evt);
            }
        });

        borderButtons.add(neToggle);
        neToggle.setText("NE");
        neToggle.setEnabled(false);
        neToggle.setFocusable(false);
        neToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                neToggleActionPerformed(evt);
            }
        });

        borderButtons.add(nwToggle);
        nwToggle.setText("NW");
        nwToggle.setEnabled(false);
        nwToggle.setFocusable(false);
        nwToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nwToggleActionPerformed(evt);
            }
        });

        borderButtons.add(seToggle);
        seToggle.setText("SE");
        seToggle.setEnabled(false);
        seToggle.setFocusable(false);
        seToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seToggleActionPerformed(evt);
            }
        });

        borderButtons.add(swToggle);
        swToggle.setText("SW");
        swToggle.setEnabled(false);
        swToggle.setFocusable(false);
        swToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                swToggleActionPerformed(evt);
            }
        });

        borderButtons.add(southToggle);
        southToggle.setText("S");
        southToggle.setEnabled(false);
        southToggle.setFocusable(false);
        southToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                southToggleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout borderLockingPanelLayout = new javax.swing.GroupLayout(borderLockingPanel);
        borderLockingPanel.setLayout(borderLockingPanelLayout);
        borderLockingPanelLayout.setHorizontalGroup(
            borderLockingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(borderLockingPanelLayout.createSequentialGroup()
                .addGroup(borderLockingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nwToggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(swToggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(westToggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(borderLockingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(borderLockingLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(northToggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(borderLockBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(southToggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(borderLockingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(seToggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(neToggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eastToggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        borderLockingPanelLayout.setVerticalGroup(
            borderLockingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(borderLockingPanelLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(borderLockingLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(borderLockingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(northToggle)
                    .addComponent(neToggle)
                    .addComponent(nwToggle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(borderLockingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(borderLockBtn)
                    .addComponent(eastToggle)
                    .addComponent(westToggle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(borderLockingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seToggle)
                    .addComponent(swToggle)
                    .addComponent(southToggle)))
        );

        tileLockingPanel.setFocusable(false);

        TileLockingLabel.setText("Tile Locking");
        TileLockingLabel.setFocusable(false);

        xTileLockBtn.setText("Lock X");
        xTileLockBtn.setEnabled(false);
        xTileLockBtn.setFocusable(false);
        xTileLockBtn.setPreferredSize(new java.awt.Dimension(81, 23));
        xTileLockBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xTileLockBtnActionPerformed(evt);
            }
        });

        yTileLockBtn.setText("Lock Y");
        yTileLockBtn.setEnabled(false);
        yTileLockBtn.setFocusable(false);
        yTileLockBtn.setPreferredSize(new java.awt.Dimension(81, 23));
        yTileLockBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yTileLockBtnActionPerformed(evt);
            }
        });

        xyTileLockBtn.setText("Lock X & Y");
        xyTileLockBtn.setEnabled(false);
        xyTileLockBtn.setFocusable(false);
        xyTileLockBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xyTileLockBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tileLockingPanelLayout = new javax.swing.GroupLayout(tileLockingPanel);
        tileLockingPanel.setLayout(tileLockingPanelLayout);
        tileLockingPanelLayout.setHorizontalGroup(
            tileLockingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tileLockingPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(tileLockingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(TileLockingLabel)
                    .addComponent(xTileLockBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(yTileLockBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(xyTileLockBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(28, 28, 28))
        );
        tileLockingPanelLayout.setVerticalGroup(
            tileLockingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tileLockingPanelLayout.createSequentialGroup()
                .addComponent(TileLockingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(xTileLockBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(yTileLockBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(xyTileLockBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 4, Short.MAX_VALUE))
        );

        jPanel1.setFocusable(false);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("pl/wurmonline/deedplanner/forms/Bundle"); // NOI18N
        xLockStatus.setText(bundle.getString("Planner.xSymLockStatusLabel.text")); // NOI18N
        xLockStatus.setFocusable(false);

        clearAllBtn.setText(bundle.getString("Planner.ySymLockClearBtn.text")); // NOI18N
        clearAllBtn.setEnabled(false);
        clearAllBtn.setFocusable(false);
        clearAllBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearAllBtnActionPerformed(evt);
            }
        });

        xLockToggle.setText(bundle.getString("Planner.xSymLockToggle.text")); // NOI18N
        xLockToggle.setEnabled(false);
        xLockToggle.setFocusable(false);
        xLockToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xLockToggleActionPerformed(evt);
            }
        });

        yLockStatus.setText(bundle.getString("Planner.ySymLockStatusLabel.text")); // NOI18N
        yLockStatus.setFocusable(false);

        yLockToggle.setText(bundle.getString("Planner.ySymLockToggle.text")); // NOI18N
        yLockToggle.setEnabled(false);
        yLockToggle.setFocusable(false);
        yLockToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yLockToggleActionPerformed(evt);
            }
        });

        mirrorFloorsToggle.setText("Off");
        mirrorFloorsToggle.setEnabled(false);
        mirrorFloorsToggle.setFocusable(false);
        mirrorFloorsToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mirrorFloorsToggleActionPerformed(evt);
            }
        });

        mirrorFloorsLabel.setText("Mirror Floors");
        mirrorFloorsLabel.setFocusable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clearAllBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(mirrorFloorsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(xLockStatus, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                            .addComponent(yLockStatus, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(xLockToggle)
                                    .addComponent(yLockToggle))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(mirrorFloorsToggle, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(clearAllBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xLockStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xLockToggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yLockStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yLockToggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mirrorFloorsToggle)
                    .addComponent(mirrorFloorsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout symInnerPanelLayout = new javax.swing.GroupLayout(symInnerPanel);
        symInnerPanel.setLayout(symInnerPanelLayout);
        symInnerPanelLayout.setHorizontalGroup(
            symInnerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(symInnerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(symInnerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tileLockingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(borderLockingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        symInnerPanelLayout.setVerticalGroup(
            symInnerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(symInnerPanelLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(borderLockingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tileLockingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(symInnerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(symInnerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 239, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void mirrorFloorsToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mirrorFloorsToggleActionPerformed
        javax.swing.JToggleButton toggleBtn =  (javax.swing.JToggleButton) evt.getSource();
        Globals.mirrorFloors = toggleBtn.isSelected();
        mirrorFloorsToggle.setText(Globals.mirrorFloors ? "On" : "Off");
    }//GEN-LAST:event_mirrorFloorsToggleActionPerformed

    private void yLockToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yLockToggleActionPerformed
        javax.swing.JToggleButton toggleBtn =  (javax.swing.JToggleButton) evt.getSource();
        Globals.ySymLock = toggleBtn.isSelected();
        yLockToggle.setText(Globals.ySymLock ? "On" : "Off");
    }//GEN-LAST:event_yLockToggleActionPerformed

    private void xLockToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xLockToggleActionPerformed
        javax.swing.JToggleButton toggleBtn =  (javax.swing.JToggleButton) evt.getSource();
        Globals.xSymLock = toggleBtn.isSelected();
        xLockToggle.setText(Globals.xSymLock ? "On" : "Off");
    }//GEN-LAST:event_xLockToggleActionPerformed

    private void clearAllBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearAllBtnActionPerformed
        Tile t = TileSelection.getSelectedTile();
        if (t!=null) {
            Globals.xSymLock = false;
            Globals.ySymLock = false;
            Globals.mirrorFloors = false;
            t.getMap().setSymmetry(new Symmetry());
        }
        updatePanel(TileSelection.getMapFragment());
    }//GEN-LAST:event_clearAllBtnActionPerformed

    private void xyTileLockBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xyTileLockBtnActionPerformed
        Tile t = TileSelection.getSelectedTile();
        if (t!=null) {
            t.getMap().setSymmetry(new Symmetry(t.getX(), t.getY()));
            Globals.xSymLock = Globals.ySymLock = true;
        }
        updatePanel(TileSelection.getMapFragment());
    }//GEN-LAST:event_xyTileLockBtnActionPerformed

    private void yTileLockBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yTileLockBtnActionPerformed
        Tile t = TileSelection.getSelectedTile();
        if (t!=null) {
            t.getMap().setSymmetry(new Symmetry(-1, t.getY()));
            Globals.xSymLock = false;
            Globals.ySymLock = true;
        }
        updatePanel(TileSelection.getMapFragment());
    }//GEN-LAST:event_yTileLockBtnActionPerformed

    private void xTileLockBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xTileLockBtnActionPerformed
        Tile t = TileSelection.getSelectedTile();
        if (t!=null) {
            t.getMap().setSymmetry(new Symmetry(t.getX(), -1));
            Globals.ySymLock = false;
            Globals.xSymLock = true;
        }
        updatePanel(TileSelection.getMapFragment());
    }//GEN-LAST:event_xTileLockBtnActionPerformed

    private void southToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_southToggleActionPerformed
        this.d = SymmetryDirection.S;
    }//GEN-LAST:event_southToggleActionPerformed

    private void swToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_swToggleActionPerformed
        this.d = SymmetryDirection.SW;
    }//GEN-LAST:event_swToggleActionPerformed

    private void seToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seToggleActionPerformed
        this.d = SymmetryDirection.SE;
    }//GEN-LAST:event_seToggleActionPerformed

    private void nwToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nwToggleActionPerformed
        this.d = SymmetryDirection.NW;
    }//GEN-LAST:event_nwToggleActionPerformed

    private void neToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_neToggleActionPerformed
        this.d = SymmetryDirection.NE;
    }//GEN-LAST:event_neToggleActionPerformed

    private void eastToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eastToggleActionPerformed
        this.d = SymmetryDirection.E;
    }//GEN-LAST:event_eastToggleActionPerformed

    private void westToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_westToggleActionPerformed
        this.d = SymmetryDirection.W;
    }//GEN-LAST:event_westToggleActionPerformed

    private void borderLockBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borderLockBtnActionPerformed
        Tile t = TileSelection.getSelectedTile();
        ButtonModel b = borderButtons.getSelection();
        if (t != null && b != null) {
            switch(d) {
                case N:
                case S:
                t.getMap().setSymmetry(new Symmetry(-1, t.getY(), d));
                Globals.ySymLock = true;
                break;
                case E:
                case W:
                t.getMap().setSymmetry(new Symmetry(t.getX(), -1, d));
                Globals.xSymLock = true;
                break;
                case NE:
                case SE:
                case NW:
                case SW:
                t.getMap().setSymmetry(new Symmetry(t.getX(), t.getY(), d));
                Globals.xSymLock = Globals.ySymLock = true;
                break;
            }
        }
        updatePanel(TileSelection.getMapFragment());

    }//GEN-LAST:event_borderLockBtnActionPerformed

    private void northToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_northToggleActionPerformed
        this.d = SymmetryDirection.N;
    }//GEN-LAST:event_northToggleActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel TileLockingLabel;
    private javax.swing.ButtonGroup borderButtons;
    private javax.swing.JButton borderLockBtn;
    private javax.swing.JLabel borderLockingLabel;
    private javax.swing.JPanel borderLockingPanel;
    private javax.swing.JButton clearAllBtn;
    private javax.swing.JToggleButton eastToggle;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel mirrorFloorsLabel;
    private javax.swing.JToggleButton mirrorFloorsToggle;
    private javax.swing.JToggleButton neToggle;
    private javax.swing.JToggleButton northToggle;
    private javax.swing.JToggleButton nwToggle;
    private javax.swing.JToggleButton seToggle;
    private javax.swing.JToggleButton southToggle;
    private javax.swing.JToggleButton swToggle;
    private javax.swing.JPanel symInnerPanel;
    private javax.swing.JPanel tileLockingPanel;
    private javax.swing.JToggleButton westToggle;
    private javax.swing.JLabel xLockStatus;
    private javax.swing.JToggleButton xLockToggle;
    private javax.swing.JButton xTileLockBtn;
    private javax.swing.JButton xyTileLockBtn;
    private javax.swing.JLabel yLockStatus;
    private javax.swing.JToggleButton yLockToggle;
    private javax.swing.JButton yTileLockBtn;
    // End of variables declaration//GEN-END:variables
}
